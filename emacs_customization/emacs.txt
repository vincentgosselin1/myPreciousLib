#this is to be copied in ~/.emacs


(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(package-selected-packages '(dumb-jump)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
(add-hook 'xref-backend-functions #'dumb-jump-xref-activate)



(require 'package)
(add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/"))
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-names-vector
   ["#212526" "#ff4b4b" "#b4fa70" "#fce94f" "#729fcf" "#e090d7" "#8cc4ff" "#eeeeec"])
 '(custom-enabled-themes '(manoj-dark))
 '(package-selected-packages '(dumb-jump)))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
(add-hook 'xref-backend-functions #'dumb-jump-xref-activate)
(require 'animate)
;; all i did was to "load-file animate.el" command.
;; after that I modified .emacs to include the animate package
;; after that I use "load-file ~/.emacs command. 


rm -f TAGS
find . -name "*.[ch]" -print | xargs etags -a


cd /path/to/source-root
find . -name "*.cpp" -print -or -name "*.h" -print | xargs etags --append

#grep the fuckout
grep  -nH --null dut  *.sv


;my own stuff
(defalias 'wss (read-kbd-macro "M-x window-swap-states"))


; Window configuration setters/
(defalias 'W  'rw )  ; Return-To-Window-Config-
(defalias 'W2 'rw2)  ; Return-To-Window-Config-
(defalias 'W3 'rw3)  ; Return-To-Window-Config-
(defalias 'W4 'rw4)  ; Return-To-Window-Config-4
(defalias 'W5 'rw5)  ; Return-To-Window-Config-

(defalias 'rw  (read-kbd-macro "C-x r j w")) ; Return-To-Window-Config-
(defalias 'rw2 (read-kbd-macro "C-x r j 5")) ; Return-To-Window-Config-
(defalias 'rw3 (read-kbd-macro "C-x r j 6")) ; Return-To-Window-Config-
(defalias 'rw4 (read-kbd-macro "C-x r j 7")) ; Return-To-Window-Config-4
(defalias 'rw5 (read-kbd-macro "C-x r j 8")) ; Return-To-Window-Config-5

(defalias 'sw  (read-kbd-macro "C-x r w w")) ; Set-Window-Config-w    in: reg w
(defalias 'sw2 (read-kbd-macro "C-x r w 5")) ; Set-Window-Config-w2 + 3 = reg 5
(defalias 'sw3 (read-kbd-macro "C-x r w 6")) ; Set-Window-Config-w3 + 3 = reg 6
(defalias 'sw4 (read-kbd-macro "C-x r w 7")) ; Set-Window-Config-w4 + 3 = reg 7
(defalias 'sw5 (read-kbd-macro "C-x r w 8")) ; Set-Window-Config-w5 + 3 = reg 8
