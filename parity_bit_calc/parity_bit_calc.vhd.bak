--parity_bit_calc.vhd by VincentGosselin2020.

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

entity parity_bit_calc is

	generic
	(
		NUM_BITS : natural := 8
	);
	
	port
	(
		--inputs
		clk		  : in std_logic; --50 MHZ clock input for devkit
		resetn	  : in std_logic;
		word_in : in std_logic_vector(NUM_BITS-1 downto 0);
		
		--output
		p_bit : out std_logic

	);

end entity;

architecture rtl of parity_bit_calc is

--signals
signal word_in_reg : std_logic_vector(NUM_BITS-1 downto 0);

begin

	process(clk)
	begin
		if(resetn = '0') then 
			p_bit <= '0';
			word_in_reg <= (others => '0');
		elsif rising_edge(clk) then
			word_in_reg <= word_in;
		end if;
	end process;

	process(clk)
	variable sum_of_ones : integer;
	variable i : integer;
	begin
		if resetn = '0' then
			sum_of_ones := 0;
			i := 0;
		elsif rising_edge(clk) then
			if i = NUM_BITS then
				i := 0;
			elsif
				i = i + 1;
				sum = sum + word_in_reg(i);
			end if;
		end if;
	end process;
	





end rtl;